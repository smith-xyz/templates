[project]
name = "ml-template"
version = "0.1.0"
description = "A machine learning project template with modern Python tooling"
requires-python = ">=3.11"
dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "polars>=0.20.0",
    "scikit-learn>=1.3.0",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "transformers>=4.30.0",
    "datasets>=2.14.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "mlflow>=2.7.0",
    "optuna>=3.3.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.1",
    "typer>=0.9.0",
    "rich>=13.5.0",
    "joblib>=1.3.0",
    "pyarrow>=13.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "nbstripout>=0.6.0",
    "httpx>=0.25.0",
]

[dependency-groups]
dev = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "nbstripout>=0.6.0",
    "httpx>=0.25.0",
]

[project.scripts]
ml = "src.cli:app"

[tool.ruff]
line-length = 88
target-version = "py311"
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B905",  # zip() without an explicit strict= parameter
    "B008",  # typer.Option calls in function defaults (common pattern)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.ruff.lint.per-file-ignores]
"*.ipynb" = [
    "E402",  # Module level import not at top of file
    "E501",  # Line too long (let formatter handle it)
    "F401",  # Imported but unused (common in notebooks for exploration)
    "F403",  # Star imports (sometimes useful in notebooks)
    "T201",  # Print statements (notebooks need these!)
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gpu: marks tests that require GPU",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]
